

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul 22 07:20:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  015A                     __pidataBANK0:
   291                           
   292                           ;initializer for _sietes
   293  015A  343F               	retlw	63
   294  015B  3406               	retlw	6
   295  015C  345B               	retlw	91
   296  015D  344F               	retlw	79
   297  015E  3466               	retlw	102
   298  015F  346D               	retlw	109
   299  0160  347D               	retlw	125
   300  0161  3407               	retlw	7
   301  0162  347F               	retlw	127
   302  0163  346F               	retlw	111
   303  0164  3477               	retlw	119
   304  0165  347C               	retlw	124
   305  0166  3439               	retlw	57
   306  0167  345E               	retlw	94
   307  0168  3479               	retlw	121
   308  0169  3471               	retlw	113
   309  0006                     _PORTB	set	6
   310  0005                     _PORTA	set	5
   311  0007                     _PORTC	set	7
   312  0006                     _PORTBbits	set	6
   313  0001                     _TMR0	set	1
   314  000B                     _INTCONbits	set	11
   315  0008                     _PORTD	set	8
   316  0005                     _PORTAbits	set	5
   317  001E                     _ADRESH	set	30
   318  001F                     _ADCON0bits	set	31
   319  000C                     _PIR1bits	set	12
   320  002C                     _RA4	set	44
   321  00F9                     _GO	set	249
   322  0058                     _RBIF	set	88
   323  002E                     _RA6	set	46
   324  002D                     _RA5	set	45
   325  005A                     _T0IF	set	90
   326  009F                     _ADCON1bits	set	159
   327  008C                     _PIE1bits	set	140
   328  0096                     _IOCBbits	set	150
   329  0095                     _WPUB	set	149
   330  0081                     _OPTION_REGbits	set	129
   331  008F                     _OSCCONbits	set	143
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334  0086                     _TRISBbits	set	134
   335  0085                     _TRISAbits	set	133
   336  0189                     _ANSELH	set	393
   337  0188                     _ANSEL	set	392
   338                           
   339                           	psect	cinit
   340  0011                     start_initialization:	
   341                           ; #config settings
   342                           
   343  0011                     __initialization:
   344                           
   345                           ; Initialize objects allocated to BANK0
   346  0011  1383               	bcf	3,7	;select IRP bank0
   347  0012  3030               	movlw	low (__pdataBANK0+16)
   348  0013  00FD               	movwf	btemp+-1
   349  0014  3001               	movlw	high __pidataBANK0
   350  0015  00FE               	movwf	btemp
   351  0016  305A               	movlw	low __pidataBANK0
   352  0017  00FF               	movwf	btemp+1
   353  0018  3020               	movlw	low __pdataBANK0
   354  0019  0084               	movwf	4
   355  001A  120A  118A  214B  120A  118A  	fcall	init_ram0
   356                           
   357                           ; Clear objects allocated to COMMON
   358  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   359  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   360  0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   361  0022  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   362  0023  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   363  0024  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   364  0025                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  0025                     __end_of__initialization:
   368  0025  0183               	clrf	3
   369  0026  120A  118A  2913   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  0077                     __pbssCOMMON:
   373  0077                     _bandera:
   374  0077                     	ds	2
   375  0079                     _nib1:
   376  0079                     	ds	1
   377  007A                     _nib2:
   378  007A                     	ds	1
   379  007B                     _display:
   380  007B                     	ds	1
   381  007C                     _ADC:
   382  007C                     	ds	1
   383                           
   384                           	psect	dataBANK0
   385  0020                     __pdataBANK0:
   386  0020                     _sietes:
   387  0020                     	ds	16
   388                           
   389                           	psect	inittext
   390  0147                     init_fetch0:	
   391                           ;	Called with low address in FSR and high address in W
   392                           
   393  0147  087E               	movf	btemp,w
   394  0148  008A               	movwf	10
   395  0149  087F               	movf	btemp+1,w
   396  014A  0082               	movwf	2
   397  014B                     init_ram0:	
   398                           ;Called with:
   399                           ;	high address of idata address in btemp 
   400                           ;	low address of idata address in btemp+1 
   401                           ;	low address of data in FSR
   402                           ;	high address + 1 of data in btemp-1
   403                           
   404  014B  120A  118A  2147  120A  118A  	fcall	init_fetch0
   405  0150  0080               	movwf	0
   406  0151  0A84               	incf	4,f
   407  0152  0804               	movf	4,w
   408  0153  067D               	xorwf	btemp+-1,w
   409  0154  1903               	btfsc	3,2
   410  0155  3400               	retlw	0
   411  0156  0AFF               	incf	btemp+1,f
   412  0157  1903               	btfsc	3,2
   413  0158  0AFE               	incf	btemp,f
   414  0159  294B               	goto	init_ram0
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:
   418  0070                     ?_setup:
   419  0070                     ?_nibbles:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_alarma:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_ADCnum:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_isr:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439  0070                     	ds	4
   440  0074                     ??_nibbles:
   441  0074                     ??_alarma:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ??_ADCnum:	
   445                           ; 1 bytes @ 0x4
   446                           
   447                           
   448                           ; 1 bytes @ 0x4
   449  0074                     	ds	2
   450  0076                     nibbles@display:
   451  0076                     ADCnum@num:	
   452                           ; 1 bytes @ 0x6
   453                           
   454                           
   455                           ; 1 bytes @ 0x6
   456  0076                     	ds	1
   457  0077                     ??_setup:
   458  0077                     ??_main:	
   459                           ; 1 bytes @ 0x7
   460                           
   461                           
   462                           	psect	maintext
   463  0113                     __pmaintext:	
   464                           ; 1 bytes @ 0x7
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 93 in file "prelab.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : B00/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels required when called: 3
   490 ;; This function calls:
   491 ;;		_alarma
   492 ;;		_nibbles
   493 ;;		_setup
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  0113                     _main:
   502  0113                     l914:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;prelab.c: 94:     setup();
   508  0113  120A  118A  20DE  120A  118A  	fcall	_setup
   509  0118                     l916:
   510                           
   511                           ;prelab.c: 96:     {;prelab.c: 97:         nibbles(ADC);
   512  0118  087C               	movf	_ADC,w
   513  0119  120A  118A  2133  120A  118A  	fcall	_nibbles
   514  011E                     l918:
   515                           
   516                           ;prelab.c: 98:         if (GO == 0){
   517  011E  1283               	bcf	3,5	;RP0=0, select bank0
   518  011F  1303               	bcf	3,6	;RP1=0, select bank0
   519  0120  189F               	btfsc	31,1	;volatile
   520  0121  2923               	goto	u101
   521  0122  2924               	goto	u100
   522  0123                     u101:
   523  0123  292A               	goto	l922
   524  0124                     u100:
   525  0124                     l920:
   526                           
   527                           ;prelab.c: 99:             _delay((unsigned long)((100)*(250000/4000000.0)));
   528  0124  2925               	nop2	;2 cycle nop
   529  0125  2926               	nop2	;2 cycle nop
   530  0126  2927               	nop2	;2 cycle nop
   531                           
   532                           ;prelab.c: 100:             GO = 1;
   533  0127  1283               	bcf	3,5	;RP0=0, select bank0
   534  0128  1303               	bcf	3,6	;RP1=0, select bank0
   535  0129  149F               	bsf	31,1	;volatile
   536  012A                     l922:
   537                           
   538                           ;prelab.c: 102:         alarma();
   539  012A  120A  118A  216A  120A  118A  	fcall	_alarma
   540  012F  2918               	goto	l916
   541  0130  120A  118A  280E   	ljmp	start
   542  0133                     __end_of_main:
   543                           
   544                           	psect	text1
   545  00DE                     __ptext1:	
   546 ;; *************** function _setup *****************
   547 ;; Defined at:
   548 ;;		line 107 in file "prelab.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 2
   569 ;; This function calls:
   570 ;;		_ADCnum
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _setup
   578  00DE                     _setup:
   579  00DE                     l792:	
   580                           ;incstack = 0
   581                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   582                           
   583                           
   584                           ;prelab.c: 109:     ANSEL = 0b00000001;
   585  00DE  3001               	movlw	1
   586  00DF  1683               	bsf	3,5	;RP0=1, select bank3
   587  00E0  1703               	bsf	3,6	;RP1=1, select bank3
   588  00E1  0088               	movwf	8	;volatile
   589  00E2                     l794:
   590                           
   591                           ;prelab.c: 110:     ANSELH = 0x00;
   592  00E2  0189               	clrf	9	;volatile
   593  00E3                     l796:
   594                           
   595                           ;prelab.c: 113:     TRISAbits.TRISA0 = 1;
   596  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   597  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   598  00E5  1405               	bsf	5,0	;volatile
   599  00E6                     l798:
   600                           
   601                           ;prelab.c: 114:     TRISAbits.TRISA4 = 0;
   602  00E6  1205               	bcf	5,4	;volatile
   603  00E7                     l800:
   604                           
   605                           ;prelab.c: 115:     TRISAbits.TRISA5 = 0;
   606  00E7  1285               	bcf	5,5	;volatile
   607  00E8                     l802:
   608                           
   609                           ;prelab.c: 116:     TRISAbits.TRISA6 = 0;
   610  00E8  1305               	bcf	5,6	;volatile
   611  00E9                     l804:
   612                           
   613                           ;prelab.c: 117:     TRISBbits.TRISB0 = 1;
   614  00E9  1406               	bsf	6,0	;volatile
   615  00EA                     l806:
   616                           
   617                           ;prelab.c: 118:     TRISBbits.TRISB1 = 1;
   618  00EA  1486               	bsf	6,1	;volatile
   619  00EB                     l808:
   620                           
   621                           ;prelab.c: 119:     TRISC = 0x00;
   622  00EB  0187               	clrf	7	;volatile
   623  00EC                     l810:
   624                           
   625                           ;prelab.c: 120:     TRISD = 0x00;
   626  00EC  0188               	clrf	8	;volatile
   627  00ED                     l812:
   628                           
   629                           ;prelab.c: 123:     PORTA = 0x00;
   630  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   631  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   632  00EF  0185               	clrf	5	;volatile
   633  00F0                     l814:
   634                           
   635                           ;prelab.c: 124:     PORTB = 0x00;
   636  00F0  0186               	clrf	6	;volatile
   637  00F1                     l816:
   638                           
   639                           ;prelab.c: 125:     PORTC = 0x00;
   640  00F1  0187               	clrf	7	;volatile
   641  00F2                     l818:
   642                           
   643                           ;prelab.c: 126:     PORTD = 0x00;
   644  00F2  0188               	clrf	8	;volatile
   645  00F3                     l820:
   646                           
   647                           ;prelab.c: 129:     OSCCONbits.IRCF2 = 0;
   648  00F3  1683               	bsf	3,5	;RP0=1, select bank1
   649  00F4  1303               	bcf	3,6	;RP1=0, select bank1
   650  00F5  130F               	bcf	15,6	;volatile
   651  00F6                     l822:
   652                           
   653                           ;prelab.c: 130:     OSCCONbits.IRCF1 = 1;
   654  00F6  168F               	bsf	15,5	;volatile
   655  00F7                     l824:
   656                           
   657                           ;prelab.c: 131:     OSCCONbits.IRCF0 = 0;
   658  00F7  120F               	bcf	15,4	;volatile
   659  00F8                     l826:
   660                           
   661                           ;prelab.c: 132:     OSCCONbits.SCS = 1;
   662  00F8  140F               	bsf	15,0	;volatile
   663  00F9                     l828:
   664                           
   665                           ;prelab.c: 135:     OPTION_REGbits.T0CS = 0;
   666  00F9  1281               	bcf	1,5	;volatile
   667  00FA                     l830:
   668                           
   669                           ;prelab.c: 136:     OPTION_REGbits.PSA = 0;
   670  00FA  1181               	bcf	1,3	;volatile
   671  00FB                     l832:
   672                           
   673                           ;prelab.c: 137:     OPTION_REGbits.PS2 = 1;
   674  00FB  1501               	bsf	1,2	;volatile
   675  00FC                     l834:
   676                           
   677                           ;prelab.c: 138:     OPTION_REGbits.PS1 = 1;
   678  00FC  1481               	bsf	1,1	;volatile
   679  00FD                     l836:
   680                           
   681                           ;prelab.c: 139:     OPTION_REGbits.PS0 = 1;
   682  00FD  1401               	bsf	1,0	;volatile
   683  00FE                     l838:
   684                           
   685                           ;prelab.c: 142:     OPTION_REGbits.nRBPU = 0;
   686  00FE  1381               	bcf	1,7	;volatile
   687  00FF                     l840:
   688                           
   689                           ;prelab.c: 143:     WPUB = 0b00000011;
   690  00FF  3003               	movlw	3
   691  0100  0095               	movwf	21	;volatile
   692  0101                     l842:
   693                           
   694                           ;prelab.c: 144:     IOCBbits.IOCB0 = 1;
   695  0101  1416               	bsf	22,0	;volatile
   696  0102                     l844:
   697                           
   698                           ;prelab.c: 145:     IOCBbits.IOCB1 = 1;
   699  0102  1496               	bsf	22,1	;volatile
   700  0103                     l846:
   701                           
   702                           ;prelab.c: 148:     INTCONbits.GIE = 1;
   703  0103  178B               	bsf	11,7	;volatile
   704  0104                     l848:
   705                           
   706                           ;prelab.c: 149:     INTCONbits.RBIF = 1;
   707  0104  140B               	bsf	11,0	;volatile
   708  0105                     l850:
   709                           
   710                           ;prelab.c: 150:     INTCONbits.RBIE = 1;
   711  0105  158B               	bsf	11,3	;volatile
   712  0106                     l852:
   713                           
   714                           ;prelab.c: 151:     INTCONbits.PEIE = 1;
   715  0106  170B               	bsf	11,6	;volatile
   716  0107                     l854:
   717                           
   718                           ;prelab.c: 152:     INTCONbits.T0IF = 0;
   719  0107  110B               	bcf	11,2	;volatile
   720  0108                     l856:
   721                           
   722                           ;prelab.c: 153:     PIE1bits.ADIE = 1;
   723  0108  170C               	bsf	12,6	;volatile
   724  0109                     l858:
   725                           
   726                           ;prelab.c: 154:     PIR1bits.ADIF = 0;
   727  0109  1283               	bcf	3,5	;RP0=0, select bank0
   728  010A  1303               	bcf	3,6	;RP1=0, select bank0
   729  010B  130C               	bcf	12,6	;volatile
   730  010C                     l860:
   731                           
   732                           ;prelab.c: 157:     ADCnum(2);
   733  010C  3002               	movlw	2
   734  010D  120A  118A  2029  120A  118A  	fcall	_ADCnum
   735  0112                     l103:
   736  0112  0008               	return
   737  0113                     __end_of_setup:
   738                           
   739                           	psect	text2
   740  0029                     __ptext2:	
   741 ;; *************** function _ADCnum *****************
   742 ;; Defined at:
   743 ;;		line 14 in file "ADC.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  num             1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  num             1    6[COMMON] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0
   760 ;;      Totals:         3       0       0       0       0
   761 ;;Total ram usage:        3 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_setup
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _ADCnum
   773  0029                     _ADCnum:
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _ADCnum: [wreg-fsr0h+status,2+status,0]
   777                           ;ADCnum@num stored from wreg
   778  0029  00F6               	movwf	ADCnum@num
   779  002A                     l718:
   780                           
   781                           ;ADC.c: 15:     switch(num){
   782  002A  2873               	goto	l786
   783  002B                     l720:
   784                           
   785                           ;ADC.c: 17:             ADCON0bits.CHS = 0;
   786  002B  30C3               	movlw	-61
   787  002C  1283               	bcf	3,5	;RP0=0, select bank0
   788  002D  1303               	bcf	3,6	;RP1=0, select bank0
   789  002E  059F               	andwf	31,f	;volatile
   790  002F                     l722:
   791                           
   792                           ;ADC.c: 18:             _delay((unsigned long)((100)*(250000/4000000.0)));
   793  002F  2830               	nop2	;2 cycle nop
   794  0030  2831               	nop2	;2 cycle nop
   795  0031  2832               	nop2	;2 cycle nop
   796  0032                     l724:
   797                           
   798                           ;ADC.c: 19:             ADCON0bits.ADCS0 = 0;
   799  0032  1283               	bcf	3,5	;RP0=0, select bank0
   800  0033  1303               	bcf	3,6	;RP1=0, select bank0
   801  0034  131F               	bcf	31,6	;volatile
   802  0035                     l726:
   803                           
   804                           ;ADC.c: 20:             ADCON0bits.ADCS1 = 0;
   805  0035  139F               	bcf	31,7	;volatile
   806  0036                     l728:
   807                           
   808                           ;ADC.c: 21:             ADCON0bits.ADON = 1;
   809  0036  141F               	bsf	31,0	;volatile
   810  0037                     l730:
   811                           
   812                           ;ADC.c: 22:             ADCON1bits.ADFM = 0;
   813  0037  1683               	bsf	3,5	;RP0=1, select bank1
   814  0038  1303               	bcf	3,6	;RP1=0, select bank1
   815  0039  139F               	bcf	31,7	;volatile
   816  003A                     l732:
   817                           
   818                           ;ADC.c: 23:             ADCON1bits.VCFG1 = 0;
   819  003A  129F               	bcf	31,5	;volatile
   820  003B                     l734:
   821                           
   822                           ;ADC.c: 24:             ADCON1bits.VCFG0 = 0;
   823  003B  121F               	bcf	31,4	;volatile
   824                           
   825                           ;ADC.c: 25:             break;
   826  003C  2889               	goto	l126
   827  003D                     l736:
   828                           
   829                           ;ADC.c: 27:             ADCON0bits.CHS = 0;
   830  003D  30C3               	movlw	-61
   831  003E  1283               	bcf	3,5	;RP0=0, select bank0
   832  003F  1303               	bcf	3,6	;RP1=0, select bank0
   833  0040  059F               	andwf	31,f	;volatile
   834  0041                     l738:
   835                           
   836                           ;ADC.c: 28:             _delay((unsigned long)((100)*(250000/4000000.0)));
   837  0041  2842               	nop2	;2 cycle nop
   838  0042  2843               	nop2	;2 cycle nop
   839  0043  2844               	nop2	;2 cycle nop
   840  0044                     l740:
   841                           
   842                           ;ADC.c: 29:             ADCON0bits.ADCS0 = 1;
   843  0044  1283               	bcf	3,5	;RP0=0, select bank0
   844  0045  1303               	bcf	3,6	;RP1=0, select bank0
   845  0046  171F               	bsf	31,6	;volatile
   846  0047                     l742:
   847                           
   848                           ;ADC.c: 30:             ADCON0bits.ADCS1 = 0;
   849  0047  139F               	bcf	31,7	;volatile
   850  0048                     l744:
   851                           
   852                           ;ADC.c: 31:             ADCON0bits.ADON = 1;
   853  0048  141F               	bsf	31,0	;volatile
   854  0049                     l746:
   855                           
   856                           ;ADC.c: 32:             ADCON1bits.ADFM = 0;
   857  0049  1683               	bsf	3,5	;RP0=1, select bank1
   858  004A  1303               	bcf	3,6	;RP1=0, select bank1
   859  004B  139F               	bcf	31,7	;volatile
   860  004C                     l748:
   861                           
   862                           ;ADC.c: 33:             ADCON1bits.VCFG1 = 0;
   863  004C  129F               	bcf	31,5	;volatile
   864  004D                     l750:
   865                           
   866                           ;ADC.c: 34:             ADCON1bits.VCFG0 = 0;
   867  004D  121F               	bcf	31,4	;volatile
   868                           
   869                           ;ADC.c: 35:             break;
   870  004E  2889               	goto	l126
   871  004F                     l752:
   872                           
   873                           ;ADC.c: 37:             ADCON0bits.CHS = 0;
   874  004F  30C3               	movlw	-61
   875  0050  1283               	bcf	3,5	;RP0=0, select bank0
   876  0051  1303               	bcf	3,6	;RP1=0, select bank0
   877  0052  059F               	andwf	31,f	;volatile
   878  0053                     l754:
   879                           
   880                           ;ADC.c: 38:             _delay((unsigned long)((100)*(250000/4000000.0)));
   881  0053  2854               	nop2	;2 cycle nop
   882  0054  2855               	nop2	;2 cycle nop
   883  0055  2856               	nop2	;2 cycle nop
   884  0056                     l756:
   885                           
   886                           ;ADC.c: 39:             ADCON0bits.ADCS0 = 0;
   887  0056  1283               	bcf	3,5	;RP0=0, select bank0
   888  0057  1303               	bcf	3,6	;RP1=0, select bank0
   889  0058  131F               	bcf	31,6	;volatile
   890  0059                     l758:
   891                           
   892                           ;ADC.c: 40:             ADCON0bits.ADCS1 = 1;
   893  0059  179F               	bsf	31,7	;volatile
   894  005A                     l760:
   895                           
   896                           ;ADC.c: 41:             ADCON0bits.ADON = 1;
   897  005A  141F               	bsf	31,0	;volatile
   898  005B                     l762:
   899                           
   900                           ;ADC.c: 42:             ADCON1bits.ADFM = 0;
   901  005B  1683               	bsf	3,5	;RP0=1, select bank1
   902  005C  1303               	bcf	3,6	;RP1=0, select bank1
   903  005D  139F               	bcf	31,7	;volatile
   904  005E                     l764:
   905                           
   906                           ;ADC.c: 43:             ADCON1bits.VCFG1 = 0;
   907  005E  129F               	bcf	31,5	;volatile
   908  005F                     l766:
   909                           
   910                           ;ADC.c: 44:             ADCON1bits.VCFG0 = 0;
   911  005F  121F               	bcf	31,4	;volatile
   912                           
   913                           ;ADC.c: 45:             break;
   914  0060  2889               	goto	l126
   915  0061                     l768:
   916                           
   917                           ;ADC.c: 47:             ADCON0bits.CHS = 0;
   918  0061  30C3               	movlw	-61
   919  0062  1283               	bcf	3,5	;RP0=0, select bank0
   920  0063  1303               	bcf	3,6	;RP1=0, select bank0
   921  0064  059F               	andwf	31,f	;volatile
   922  0065                     l770:
   923                           
   924                           ;ADC.c: 48:             _delay((unsigned long)((100)*(250000/4000000.0)));
   925  0065  2866               	nop2	;2 cycle nop
   926  0066  2867               	nop2	;2 cycle nop
   927  0067  2868               	nop2	;2 cycle nop
   928  0068                     l772:
   929                           
   930                           ;ADC.c: 49:             ADCON0bits.ADCS0 = 1;
   931  0068  1283               	bcf	3,5	;RP0=0, select bank0
   932  0069  1303               	bcf	3,6	;RP1=0, select bank0
   933  006A  171F               	bsf	31,6	;volatile
   934  006B                     l774:
   935                           
   936                           ;ADC.c: 50:             ADCON0bits.ADCS1 = 1;
   937  006B  179F               	bsf	31,7	;volatile
   938  006C                     l776:
   939                           
   940                           ;ADC.c: 51:             ADCON0bits.ADON = 1;
   941  006C  141F               	bsf	31,0	;volatile
   942  006D                     l778:
   943                           
   944                           ;ADC.c: 52:             ADCON1bits.ADFM = 0;
   945  006D  1683               	bsf	3,5	;RP0=1, select bank1
   946  006E  1303               	bcf	3,6	;RP1=0, select bank1
   947  006F  139F               	bcf	31,7	;volatile
   948  0070                     l780:
   949                           
   950                           ;ADC.c: 53:             ADCON1bits.VCFG1 = 0;
   951  0070  129F               	bcf	31,5	;volatile
   952  0071                     l782:
   953                           
   954                           ;ADC.c: 54:             ADCON1bits.VCFG0 = 0;
   955  0071  121F               	bcf	31,4	;volatile
   956                           
   957                           ;ADC.c: 55:             break;
   958  0072  2889               	goto	l126
   959  0073                     l786:
   960  0073  0876               	movf	ADCnum@num,w
   961  0074  00F4               	movwf	??_ADCnum
   962  0075  01F5               	clrf	??_ADCnum+1
   963                           
   964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 1, Range of values is 0 to 0
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte            4     3 (average)
   970                           ; direct_byte           11     8 (fixed)
   971                           ; jumptable            260     6 (fixed)
   972                           ;	Chosen strategy is simple_byte
   973  0076  0875               	movf	??_ADCnum+1,w
   974  0077  3A00               	xorlw	0	; case 0
   975  0078  1903               	skipnz
   976  0079  287B               	goto	l944
   977  007A  2889               	goto	l126
   978  007B                     l944:
   979                           
   980                           ; Switch size 1, requested type "simple"
   981                           ; Number of cases is 4, Range of values is 0 to 3
   982                           ; switch strategies available:
   983                           ; Name         Instructions Cycles
   984                           ; simple_byte           13     7 (average)
   985                           ; direct_byte           20     8 (fixed)
   986                           ; jumptable            260     6 (fixed)
   987                           ;	Chosen strategy is simple_byte
   988  007B  0874               	movf	??_ADCnum,w
   989  007C  3A00               	xorlw	0	; case 0
   990  007D  1903               	skipnz
   991  007E  282B               	goto	l720
   992  007F  3A01               	xorlw	1	; case 1
   993  0080  1903               	skipnz
   994  0081  283D               	goto	l736
   995  0082  3A03               	xorlw	3	; case 2
   996  0083  1903               	skipnz
   997  0084  284F               	goto	l752
   998  0085  3A01               	xorlw	1	; case 3
   999  0086  1903               	skipnz
  1000  0087  2861               	goto	l768
  1001  0088  2889               	goto	l126
  1002  0089                     l126:
  1003  0089  0008               	return
  1004  008A                     __end_of_ADCnum:
  1005                           
  1006                           	psect	text3
  1007  0133                     __ptext3:	
  1008 ;; *************** function _nibbles *****************
  1009 ;; Defined at:
  1010 ;;		line 160 in file "prelab.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  display         1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  display         1    6[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _nibbles
  1040  0133                     _nibbles:
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _nibbles: [wreg+status,2+status,0]
  1044                           ;nibbles@display stored from wreg
  1045  0133  00F6               	movwf	nibbles@display
  1046  0134                     l862:
  1047                           
  1048                           ;prelab.c: 161:     nib1 = display & 0x0F;
  1049  0134  0876               	movf	nibbles@display,w
  1050  0135  390F               	andlw	15
  1051  0136  00F4               	movwf	??_nibbles
  1052  0137  0874               	movf	??_nibbles,w
  1053  0138  00F9               	movwf	_nib1
  1054  0139                     l864:
  1055                           
  1056                           ;prelab.c: 162:     nib2 = (display>>4) & 0x0F;
  1057  0139  0876               	movf	nibbles@display,w
  1058  013A  00F4               	movwf	??_nibbles
  1059  013B  3004               	movlw	4
  1060  013C                     u15:
  1061  013C  1003               	clrc
  1062  013D  0CF4               	rrf	??_nibbles,f
  1063  013E  3EFF               	addlw	-1
  1064  013F  1D03               	skipz
  1065  0140  293C               	goto	u15
  1066  0141  0874               	movf	??_nibbles,w
  1067  0142  390F               	andlw	15
  1068  0143  00F5               	movwf	??_nibbles+1
  1069  0144  0875               	movf	??_nibbles+1,w
  1070  0145  00FA               	movwf	_nib2
  1071  0146                     l106:
  1072  0146  0008               	return
  1073  0147                     __end_of_nibbles:
  1074                           
  1075                           	psect	text4
  1076  016A                     __ptext4:	
  1077 ;; *************** function _alarma *****************
  1078 ;; Defined at:
  1079 ;;		line 167 in file "prelab.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _alarma
  1109  016A                     _alarma:
  1110  016A                     l870:	
  1111                           ;incstack = 0
  1112                           ; Regs used in _alarma: [wreg]
  1113                           
  1114                           
  1115                           ;prelab.c: 168:     if (ADC < PORTC){
  1116  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1117  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1118  016C  0807               	movf	7,w	;volatile
  1119  016D  027C               	subwf	_ADC,w
  1120  016E  1803               	skipnc
  1121  016F  2971               	goto	u21
  1122  0170  2972               	goto	u20
  1123  0171                     u21:
  1124  0171  2974               	goto	l109
  1125  0172                     u20:
  1126  0172                     l872:
  1127                           
  1128                           ;prelab.c: 169:         RA4 = 1;
  1129  0172  1605               	bsf	5,4	;volatile
  1130                           
  1131                           ;prelab.c: 170:     }
  1132  0173  2975               	goto	l111
  1133  0174                     l109:	
  1134                           ;prelab.c: 171:     else {
  1135                           
  1136                           
  1137                           ;prelab.c: 172:         RA4 = 0;
  1138  0174  1205               	bcf	5,4	;volatile
  1139  0175                     l111:
  1140  0175  0008               	return
  1141  0176                     __end_of_alarma:
  1142                           
  1143                           	psect	text5
  1144  008A                     __ptext5:	
  1145 ;; *************** function _isr *****************
  1146 ;; Defined at:
  1147 ;;		line 49 in file "prelab.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          4       0       0       0       0
  1164 ;;      Totals:         4       0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		Interrupt level 1
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _isr
  1176  008A                     _isr:
  1177  008A                     i1l874:
  1178                           
  1179                           ;prelab.c: 51:     if(PIR1bits.ADIF == 1)
  1180  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1181  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1182  008C  1F0C               	btfss	12,6	;volatile
  1183  008D  288F               	goto	u3_21
  1184  008E  2890               	goto	u3_20
  1185  008F                     u3_21:
  1186  008F  289E               	goto	i1l882
  1187  0090                     u3_20:
  1188  0090                     i1l876:
  1189                           
  1190                           ;prelab.c: 52:        {;prelab.c: 53:         if(ADCON0bits.CHS == 0) {
  1191  0090  0C1F               	rrf	31,w	;volatile
  1192  0091  00F0               	movwf	??_isr
  1193  0092  0C70               	rrf	??_isr,w
  1194  0093  390F               	andlw	15
  1195  0094  3A00               	xorlw	0
  1196  0095  1D03               	skipz
  1197  0096  2898               	goto	u4_21
  1198  0097  2899               	goto	u4_20
  1199  0098                     u4_21:
  1200  0098  289D               	goto	i1l880
  1201  0099                     u4_20:
  1202  0099                     i1l878:
  1203                           
  1204                           ;prelab.c: 54:             ADC = ADRESH;
  1205  0099  081E               	movf	30,w	;volatile
  1206  009A  00F0               	movwf	??_isr
  1207  009B  0870               	movf	??_isr,w
  1208  009C  00FC               	movwf	_ADC
  1209  009D                     i1l880:
  1210                           
  1211                           ;prelab.c: 56:         PIR1bits.ADIF = 0;
  1212  009D  130C               	bcf	12,6	;volatile
  1213  009E                     i1l882:
  1214                           
  1215                           ;prelab.c: 59:     if(T0IF == 1)
  1216  009E  1D0B               	btfss	11,2	;volatile
  1217  009F  28A1               	goto	u5_21
  1218  00A0  28A2               	goto	u5_20
  1219  00A1                     u5_21:
  1220  00A1  28C2               	goto	i1l902
  1221  00A2                     u5_20:
  1222  00A2                     i1l884:
  1223                           
  1224                           ;prelab.c: 60:     {;prelab.c: 61:         RA5 = 0;
  1225  00A2  1285               	bcf	5,5	;volatile
  1226                           
  1227                           ;prelab.c: 62:         RA6 = 0;
  1228  00A3  1305               	bcf	5,6	;volatile
  1229  00A4                     i1l886:
  1230                           
  1231                           ;prelab.c: 63:        if (bandera == 1){
  1232  00A4  0377               	decf	_bandera,w
  1233  00A5  0478               	iorwf	_bandera+1,w
  1234  00A6  1D03               	btfss	3,2
  1235  00A7  28A9               	goto	u6_21
  1236  00A8  28AA               	goto	u6_20
  1237  00A9                     u6_21:
  1238  00A9  28B4               	goto	i1l86
  1239  00AA                     u6_20:
  1240  00AA                     i1l888:
  1241                           
  1242                           ;prelab.c: 64:             PORTAbits.RA5 = 1;
  1243  00AA  1685               	bsf	5,5	;volatile
  1244  00AB                     i1l890:
  1245                           
  1246                           ;prelab.c: 65:             PORTD = sietes[nib2];
  1247  00AB  087A               	movf	_nib2,w
  1248  00AC  3E20               	addlw	(low (_sietes| 0))& (0+255)
  1249  00AD  0084               	movwf	4
  1250  00AE  1383               	bcf	3,7	;select IRP bank0
  1251  00AF  0800               	movf	0,w
  1252  00B0  0088               	movwf	8	;volatile
  1253  00B1                     i1l892:
  1254                           
  1255                           ;prelab.c: 66:             bandera = 0;
  1256  00B1  01F7               	clrf	_bandera
  1257  00B2  01F8               	clrf	_bandera+1
  1258                           
  1259                           ;prelab.c: 67:         }
  1260  00B3  28BF               	goto	i1l898
  1261  00B4                     i1l86:	
  1262                           ;prelab.c: 68:         else {
  1263                           
  1264                           
  1265                           ;prelab.c: 69:             PORTAbits.RA6 = 1;
  1266  00B4  1705               	bsf	5,6	;volatile
  1267  00B5                     i1l894:
  1268                           
  1269                           ;prelab.c: 70:             PORTD = sietes[nib1];
  1270  00B5  0879               	movf	_nib1,w
  1271  00B6  3E20               	addlw	(low (_sietes| 0))& (0+255)
  1272  00B7  0084               	movwf	4
  1273  00B8  1383               	bcf	3,7	;select IRP bank0
  1274  00B9  0800               	movf	0,w
  1275  00BA  0088               	movwf	8	;volatile
  1276  00BB                     i1l896:
  1277                           
  1278                           ;prelab.c: 71:             bandera = 1;
  1279  00BB  3001               	movlw	1
  1280  00BC  00F7               	movwf	_bandera
  1281  00BD  3000               	movlw	0
  1282  00BE  00F8               	movwf	_bandera+1
  1283  00BF                     i1l898:
  1284                           
  1285                           ;prelab.c: 74:         INTCONbits.T0IF = 0;
  1286  00BF  110B               	bcf	11,2	;volatile
  1287  00C0                     i1l900:
  1288                           
  1289                           ;prelab.c: 75:         TMR0 = 255;
  1290  00C0  30FF               	movlw	255
  1291  00C1  0081               	movwf	1	;volatile
  1292  00C2                     i1l902:
  1293                           
  1294                           ;prelab.c: 78:     if (RBIF == 1)
  1295  00C2  1C0B               	btfss	11,0	;volatile
  1296  00C3  28C5               	goto	u7_21
  1297  00C4  28C6               	goto	u7_20
  1298  00C5                     u7_21:
  1299  00C5  28D5               	goto	i1l91
  1300  00C6                     u7_20:
  1301  00C6                     i1l904:
  1302                           
  1303                           ;prelab.c: 79:     {;prelab.c: 80:         if (PORTBbits.RB0 == 0)
  1304  00C6  1806               	btfsc	6,0	;volatile
  1305  00C7  28C9               	goto	u8_21
  1306  00C8  28CA               	goto	u8_20
  1307  00C9                     u8_21:
  1308  00C9  28CD               	goto	i1l908
  1309  00CA                     u8_20:
  1310  00CA                     i1l906:
  1311                           
  1312                           ;prelab.c: 81:         {;prelab.c: 82:             PORTC = PORTC + 1;
  1313  00CA  0807               	movf	7,w	;volatile
  1314  00CB  3E01               	addlw	1
  1315  00CC  0087               	movwf	7	;volatile
  1316  00CD                     i1l908:
  1317                           
  1318                           ;prelab.c: 84:         if (PORTBbits.RB1 == 0)
  1319  00CD  1886               	btfsc	6,1	;volatile
  1320  00CE  28D0               	goto	u9_21
  1321  00CF  28D1               	goto	u9_20
  1322  00D0                     u9_21:
  1323  00D0  28D4               	goto	i1l912
  1324  00D1                     u9_20:
  1325  00D1                     i1l910:
  1326                           
  1327                           ;prelab.c: 85:         {;prelab.c: 86:             PORTC = PORTC - 1;
  1328  00D1  0807               	movf	7,w	;volatile
  1329  00D2  3EFF               	addlw	255
  1330  00D3  0087               	movwf	7	;volatile
  1331  00D4                     i1l912:
  1332                           
  1333                           ;prelab.c: 88:         INTCONbits.RBIF = 0;
  1334  00D4  100B               	bcf	11,0	;volatile
  1335  00D5                     i1l91:
  1336  00D5  0873               	movf	??_isr+3,w
  1337  00D6  008A               	movwf	10
  1338  00D7  0872               	movf	??_isr+2,w
  1339  00D8  0084               	movwf	4
  1340  00D9  0E71               	swapf	??_isr+1,w
  1341  00DA  0083               	movwf	3
  1342  00DB  0EFE               	swapf	btemp,f
  1343  00DC  0E7E               	swapf	btemp,w
  1344  00DD  0009               	retfie
  1345  00DE                     __end_of_isr:
  1346  007E                     btemp	set	126	;btemp
  1347  007E                     wtemp0	set	126
  1348                           
  1349                           	psect	intentry
  1350  0004                     __pintentry:	
  1351                           ;incstack = 0
  1352                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1353                           
  1354  0004                     interrupt_function:
  1355  007E                     saved_w	set	btemp
  1356  0004  00FE               	movwf	btemp
  1357  0005  0E03               	swapf	3,w
  1358  0006  00F1               	movwf	??_isr+1
  1359  0007  0804               	movf	4,w
  1360  0008  00F2               	movwf	??_isr+2
  1361  0009  080A               	movf	10,w
  1362  000A  00F3               	movwf	??_isr+3
  1363  000B  120A  118A  288A   	ljmp	_isr
  1364                           
  1365                           	psect	config
  1366                           
  1367                           ;Config register CONFIG1 @ 0x2007
  1368                           ;	Oscillator Selection bits
  1369                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1370                           ;	Watchdog Timer Enable bit
  1371                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1372                           ;	Power-up Timer Enable bit
  1373                           ;	PWRTE = OFF, PWRT disabled
  1374                           ;	RE3/MCLR pin function select bit
  1375                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1376                           ;	Code Protection bit
  1377                           ;	CP = OFF, Program memory code protection is disabled
  1378                           ;	Data Code Protection bit
  1379                           ;	CPD = OFF, Data memory code protection is disabled
  1380                           ;	Brown Out Reset Selection bits
  1381                           ;	BOREN = OFF, BOR disabled
  1382                           ;	Internal External Switchover bit
  1383                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1384                           ;	Fail-Safe Clock Monitor Enabled bit
  1385                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1386                           ;	Low Voltage Programming Enable bit
  1387                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1388                           ;	In-Circuit Debugger Mode bit
  1389                           ;	DEBUG = 0x1, unprogrammed default
  1390  2007                     	org	8199
  1391  2007  20D4               	dw	8404
  1392                           
  1393                           ;Config register CONFIG2 @ 0x2008
  1394                           ;	Brown-out Reset Selection bit
  1395                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1396                           ;	Flash Program Memory Self Write Enable bits
  1397                           ;	WRT = OFF, Write protection off
  1398  2008                     	org	8200
  1399  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_nibbles
    _setup->_ADCnum

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                             _alarma
                            _nibbles
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                             _ADCnum
 ---------------------------------------------------------------------------------
 (2) _ADCnum                                               3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _nibbles                                              3     3      0      30
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _alarma                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _alarma
   _nibbles
   _setup
     _ADCnum

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul 22 07:20:12 2021

                      pc 0002                       _GO 00F9                       u20 0172  
                     u21 0171                       u15 013C                       fsr 0004  
                    l111 0175                      l103 0112                      l106 0146  
                    l109 0174                      l126 0089                      _ADC 007C  
                    l720 002B                      l800 00E7                      l730 0037  
                    l722 002F                      l810 00EC                      l802 00E8  
                    l740 0044                      l732 003A                      l724 0032  
                    l820 00F3                      l812 00ED                      l804 00E9  
                    l750 004D                      l742 0047                      l734 003B  
                    l726 0035                      l718 002A                      l830 00FA  
                    l822 00F6                      l814 00F0                      l806 00EA  
                    l760 005A                      l752 004F                      l744 0048  
                    l736 003D                      l728 0036                      l840 00FF  
                    l832 00FB                      l824 00F7                      l816 00F1  
                    l808 00EB                      l920 0124                      l770 0065  
                    l762 005B                      l754 0053                      l746 0049  
                    l738 0041                      l850 0105                      l842 0101  
                    l834 00FC                      l826 00F8                      l818 00F2  
                    l922 012A                      l914 0113                      l780 0070  
                    l772 0068                      l764 005E                      l756 0056  
                    l748 004C                      l860 010C                      l852 0106  
                    l844 0102                      l836 00FD                      l828 00F9  
                    l916 0118                      l870 016A                      l862 0134  
                    l782 0071                      l774 006B                      l766 005F  
                    l758 0059                      l854 0107                      l846 0103  
                    l838 00FE                      l918 011E                      l872 0172  
                    l864 0139                      l944 007B                      l776 006C  
                    l768 0061                      l856 0108                      l848 0104  
                    l792 00DE                      l778 006D                      l786 0073  
                    l858 0109                      l794 00E2                      l796 00E3  
                    l798 00E6                      _RA4 002C                      _RA5 002D  
                    _RA6 002E                      u100 0124                      u101 0123  
                    _isr 008A                      fsr0 0004                      indf 0000  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   i1l91 00D5                     i1l86 00B4                     _TMR0 0001  
                   _WPUB 0095                     u3_20 0090                     u3_21 008F  
                   u4_20 0099                     u4_21 0098                     u5_20 00A2  
                   u5_21 00A1                     u6_20 00AA                     u6_21 00A9  
                   u7_20 00C6                     u7_21 00C5                     u8_20 00CA  
                   u8_21 00C9                     u9_20 00D1                     u9_21 00D0  
                   _nib1 0079                     _nib2 007A                     _main 0113  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l900 00C0  
                  i1l910 00D1                    i1l902 00C2                    i1l912 00D4  
                  i1l904 00C6                    i1l906 00CA                    i1l908 00CD  
                  i1l880 009D                    i1l890 00AB                    i1l882 009E  
                  i1l874 008A                    i1l892 00B1                    i1l884 00A2  
                  i1l876 0090                    i1l894 00B5                    i1l886 00A4  
                  i1l878 0099                    i1l896 00BB                    i1l888 00AA  
                  i1l898 00BF                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088          __end_of_nibbles 0147                    _setup 00DE  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0133                   ??_main 0077  
                 _ADRESH 001E                   ?_setup 0070                   _ADCnum 0029  
                 _ANSELH 0189                   _alarma 016A                ADCnum@num 0076  
                 _sietes 0020                ??_nibbles 0074                   saved_w 007E  
__end_of__initialization 0025           __pcstackCOMMON 0070             __pidataBANK0 015A  
          __end_of_setup 0113           _OPTION_REGbits 0081                  ??_setup 0077  
                ?_ADCnum 0070               __pmaintext 0113                  ?_alarma 0070  
             __pintentry 0004          __size_of_ADCnum 0061          __size_of_alarma 000C  
                _bandera 0077                  __ptext1 00DE                  __ptext2 0029  
                __ptext3 0133                  __ptext4 016A                  __ptext5 008A  
                _display 007B                  _nibbles 0133             __size_of_isr 0054  
   end_of_initialization 0025                _PORTAbits 0005                _PORTBbits 0006  
         nibbles@display 0076                _TRISAbits 0085                _TRISBbits 0086  
         __end_of_ADCnum 008A           __end_of_alarma 0176      start_initialization 0011  
            __end_of_isr 00DE                 ??_ADCnum 0074               init_fetch0 0147  
               ??_alarma 0074              __pdataBANK0 0020              __pbssCOMMON 0077  
              ___latbits 0002                 ?_nibbles 0070           __size_of_setup 0035  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_nibbles 0014            __size_of_main 0020               _INTCONbits 000B  
               init_ram0 014B                 intlevel1 0000               _OSCCONbits 008F  
